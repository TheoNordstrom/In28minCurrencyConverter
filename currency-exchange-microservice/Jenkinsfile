pipeline {
	agent any
	// agent { docker { image 'maven:3.6.3'}}
	environment {
		dockerHome = tool 'MyDocker'
		mavenHome = tool 'MyMaven'
		PATH = "$dockerHome/bin:$mavenHome/bin:$PATH"
	}
	stages {
		stage('Checkout') {
			steps {
				sh 'mvn --version'
				sh 'docker version'
				echo "$Path"
				echo "BUILD_NUMBER - $env.BUILD_NUMBER"
				echo "BUILD_ID -     $env.BUILD_ID"
				echo "JOB_NAME -     $env.JOB_NAME"
				echo "BUILD_TAG -    $env.BUILD_TAG"
				echo "BUILD_URL -    $env.BUILD_URL"
			}
		}
		stage('Compile') {
			steps {
				sh "mvn -f currency-exchange-microservice/pom.xml clean compile"
			}
		}
		stage('Test') {
			steps {
				sh "mvn -f currency-exchange-microservice/pom.xml test"
			}
		}
		stage('Integration Test') {
			steps {
				sh "mvn -f currency-exchange-microservice/pom.xml failsafe:integration-test failsafe:verify"
			}
		}
		stage('Package') {
			steps {
				sh "mvn -f currency-exchange-microservice/pom.xml package -DskipTest"
			}
		}
		stage('Build Docker Image') {
			steps {
				// "docker build -t ttnconsult/In28minCurrencyConverter:$env.BUILD_TAG"
				script {
					dockerImage = docker.build("ttnconsult/in28mincurrencyconverter:${env.BUILD_TAG}", "currency-exchange-microservice")
				}
			}
		}
		stage('Push Docker Image') {
			steps {
				script {
					echo "docker push is starting"
					docker.withRegistrty('','ttnconsultDocker') {  // first arg is the dockerhub, where empty means default = dockerhub
						echo "docker push"
						dockerImage.push();
						dockerImage.push('latest');
					}
					echo "docker push is finished"
				}
			}
		}
	}
	post {
		always {
			echo "Text always show"
		}
		success {
			echo "Build pipeling success"
		}
		failure {
			echo "Build pipeline failed"
		}
	}
}